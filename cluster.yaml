services:
  fdb:
    container_name: demo-foundationdb 
    image: foundationdb/foundationdb:7.3.63
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "4500"]
      interval: 3s
      timeout: 1s
      retries: 10
    networks:
      - datalayers-network

  fdb-sidecar:
    container_name: demo-fdb-sidecar
    image: foundationdb/foundationdb:7.3.63
    healthcheck:
      test: ["CMD", "fdbcli", "-exec", "status"]
      interval: 3s
      timeout: 1s
      retries: 10
    volumes:
      - ./fdb.cluster:/etc/foundationdb/fdb.cluster
    depends_on:
      fdb:
        condition: service_healthy
    entrypoint:
      - /bin/bash
      - -c
      - |
        fdbcli -C /etc/foundationdb/fdb.cluster --exec "configure new single ssd-redwood-1"
    networks:
      - datalayers-network
  datalayers:
    image: datalayers/datalayers:nightly
    environment:
      - DATALAYERS_SERVER__AUTH__USERNAME=admin
      - DATALAYERS_SERVER__AUTH__PASSWORD=public
      - DATALAYERS_SERVER__STANDALONE=false
      - DATALAYERS_SERVER__REDIS=0.0.0.0:8362
      - DATALAYERS_TS_ENGINE__FLUSH_ON_EXIT=true
      - DATALAYERS_TS_ENGINE__META_CACHE_SIZE=1G
      - DATALAYERS_STORAGE__OBJECT_STORE__FDB__WRITE_RATE_LIMIT=2MB
      - DATALAYERS_SCHEDULER__CLUSTER_COMPACT_ACTIVE__CONCURRENCE_LIMIT=1
      - DATALAYERS_NODE__AUTO_FAILOVER=true
      #- DATALAYERS_RUNTIME__BACKGROUND_CPU_CORES=2
    volumes:
      - ./fdb.cluster:/etc/foundationdb/fdb.cluster
    depends_on:
      fdb-sidecar:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "dlsql", "-u", "admin", "-p", "public"]
      interval: 5s
      timeout: 5s
      retries: 12
    entrypoint:
      - bash
      - -c
      - |
        export DATALAYERS_NODE__NAME="$(hostname):8366"
        datalayers
    networks:
      - datalayers-network

  prometheus:
    container_name: demo-prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.retention.size=20GB
    networks:
      - datalayers-network

  grafana:
    container_name: demo-grafana
    image: grafana/grafana:latest
    environment:
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=datalayersio-datasource
    volumes:
      # https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/#default-paths
      - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datalayersio-datasource.yaml
      - ./grafana/providers.yaml:/etc/grafana/provisioning/dashboards/datalayersio-datasource.yaml
      - ./grafana/dashboard-configured.json:/var/lib/grafana/dashboards/datalayersio-datasource/dashboard.json
      - ./grafana/datalayersio-datasource:/var/lib/grafana/plugins/datalayersio-datasource
      - ./grafana/foundationdb-configured.json:/var/lib/grafana/dashboards/datalayersio-datasource/foundationdb-dashboard.json
    networks:
      - datalayers-network

  web-proxy:
    container_name: demo-proxy
    image: nginx:latest
    ports:
      - "28361:8361" # Datalayers HTTP
      - "28360:8360" # Flight SQL
      - "28362:8362" # Redis
      - "30000:3000" # Grafana
      - "29090:9090" # Prometheus
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      datalayers:
        condition: service_healthy
    networks:
      - datalayers-network

networks:
  datalayers-network:
    driver: bridge
